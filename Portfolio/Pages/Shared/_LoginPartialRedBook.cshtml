@using Microsoft.AspNetCore.Identity


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
@*             <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
 *@            <span style="text-decoration: none; opacity: .5;" class="nav-link disabled border-0 text-light">Hello @UserManager.GetUserName(User)!</span>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Redbook/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link border-0" id="register" href="@Url.Action("RedirectToRegister", "Redirection", new { area = "Identity", layout = "RedBook" })">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link border-0" id="login" href="@Url.Action("RedirectToLogin", "Redirection",new { area = "Identity", layout = "RedBook" })">Login or Demo</a>
        </li>
    }
</ul>
